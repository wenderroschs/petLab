{"version":3,"sources":["../src/utils/isBrowser.js","../src/utils/debounce.js","../src/utils/isFunction.js","../src/utils/getStyleComputedProperty.js","../src/utils/getParentNode.js","../src/utils/getScrollParent.js","../src/utils/isIE.js","../src/utils/getOffsetParent.js","../src/utils/isOffsetContainer.js","../src/utils/getRoot.js","../src/utils/findCommonOffsetParent.js","../src/utils/getScroll.js","../src/utils/includeScroll.js","../src/utils/getBordersSize.js","../src/utils/getWindowSizes.js","../src/utils/getClientRect.js","../src/utils/getBoundingClientRect.js","../src/utils/getOffsetRectRelativeToArbitraryNode.js","../src/utils/getViewportOffsetRectRelativeToArtbitraryNode.js","../src/utils/isFixed.js","../src/utils/getFixedPositionOffsetParent.js","../src/utils/getBoundaries.js","../src/utils/computeAutoPlacement.js","../src/utils/getReferenceOffsets.js","../src/utils/getOuterSizes.js","../src/utils/getOppositePlacement.js","../src/utils/getPopperOffsets.js","../src/utils/find.js","../src/utils/findIndex.js","../src/utils/runModifiers.js","../src/methods/update.js","../src/utils/isModifierEnabled.js","../src/utils/getSupportedPropertyName.js","../src/methods/destroy.js","../src/utils/getWindow.js","../src/utils/setupEventListeners.js","../src/methods/enableEventListeners.js","../src/utils/removeEventListeners.js","../src/methods/disableEventListeners.js","../src/utils/isNumeric.js","../src/utils/setStyles.js","../src/utils/setAttributes.js","../src/modifiers/applyStyle.js","../src/utils/getRoundedOffsets.js","../src/modifiers/computeStyle.js","../src/utils/isModifierRequired.js","../src/modifiers/arrow.js","../src/utils/getOppositeVariation.js","../src/methods/placements.js","../src/utils/clockwise.js","../src/modifiers/flip.js","../src/modifiers/keepTogether.js","../src/modifiers/offset.js","../src/modifiers/preventOverflow.js","../src/modifiers/shift.js","../src/modifiers/hide.js","../src/modifiers/inner.js","../src/modifiers/index.js","../src/methods/defaults.js","../src/index.js"],"names":["window","document","timeoutDuration","i","longerTimeoutBrowsers","length","isBrowser","navigator","userAgent","indexOf","called","Promise","resolve","then","scheduled","supportsMicroTasks","functionToCheck","getType","toString","call","element","nodeType","ownerDocument","defaultView","css","getComputedStyle","property","nodeName","parentNode","host","body","overflow","overflowX","overflowY","getStyleComputedProperty","test","getScrollParent","getParentNode","isIE11","MSInputMethodContext","documentMode","isIE10","version","documentElement","noOffsetParent","isIE","offsetParent","nextElementSibling","getOffsetParent","firstElementChild","node","getRoot","element1","element2","order","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","start","end","range","createRange","setStart","setEnd","commonAncestorContainer","contains","isOffsetContainer","element1root","findCommonOffsetParent","side","upperSide","html","scrollingElement","subtract","scrollTop","getScroll","scrollLeft","modifier","top","bottom","left","right","sideA","axis","sideB","parseFloat","styles","Math","max","parseInt","computedStyle","getSize","offsets","width","height","rect","getBoundingClientRect","result","sizes","getWindowSizes","clientWidth","clientHeight","horizScrollbar","offsetWidth","vertScrollbar","offsetHeight","getBordersSize","getClientRect","fixedPosition","runIsIE","isHTML","parent","childrenRect","parentRect","scrollParent","borderTopWidth","borderLeftWidth","marginTop","marginLeft","includeScroll","excludeScroll","relativeOffset","getOffsetRectRelativeToArbitraryNode","innerWidth","innerHeight","offset","isFixed","parentElement","el","boundaries","getFixedPositionOffsetParent","boundariesElement","getViewportOffsetRectRelativeToArtbitraryNode","boundariesNode","popper","padding","isPaddingNumber","placement","getBoundaries","rects","refRect","sortedAreas","Object","keys","map","key","getArea","sort","b","area","a","filteredAreas","filter","computedPlacement","variation","split","commonOffsetParent","x","marginBottom","y","marginRight","hash","replace","matched","popperRect","getOuterSizes","popperOffsets","isHoriz","mainSide","secondarySide","measurement","secondaryMeasurement","referenceOffsets","getOppositePlacement","Array","prototype","find","arr","findIndex","cur","match","obj","modifiersToRun","ends","modifiers","slice","forEach","warn","fn","enabled","isFunction","data","reference","state","isDestroyed","getReferenceOffsets","options","positionFixed","computeAutoPlacement","flip","originalPlacement","getPopperOffsets","position","runModifiers","isCreated","onUpdate","onCreate","some","name","prefixes","upperProp","charAt","toUpperCase","prefix","toCheck","style","isModifierEnabled","removeAttribute","willChange","getSupportedPropertyName","disableEventListeners","removeOnDestroy","removeChild","isBody","target","addEventListener","passive","push","updateBound","scrollElement","scrollParents","eventsEnabled","setupEventListeners","scheduleUpdate","removeEventListener","removeEventListeners","n","isNaN","isFinite","prop","unit","isNumeric","value","attributes","setAttribute","instance","arrowElement","arrowStyles","round","floor","noRound","v","referenceWidth","popperWidth","isVertical","isVariation","horizontalToInteger","verticalToInteger","bothOddWidth","isFirefox","legacyGpuAccelerationOption","gpuAcceleration","offsetParentRect","getRoundedOffsets","devicePixelRatio","prefixedProperty","invertTop","invertLeft","arrow","requesting","isRequired","requested","isModifierRequired","querySelector","len","sideCapitalized","toLowerCase","altSide","opSide","arrowElementSize","center","popperMarginSide","popperBorderSide","sideValue","min","validPlacements","placements","counter","index","concat","reverse","BEHAVIORS","flipped","placementOpposite","flipOrder","behavior","FLIP","CLOCKWISE","clockwise","COUNTERCLOCKWISE","refOffsets","overlapsRef","overflowsLeft","overflowsRight","overflowsTop","overflowsBottom","overflowsBoundaries","flippedVariationByRef","flipVariations","flippedVariationByContent","flipVariationsByContent","flippedVariation","getOppositeVariation","str","size","useHeight","fragments","frag","trim","divider","search","splitRegex","ops","mergeWithPrevious","op","reduce","toValue","index2","basePlacement","parseOffset","transformProp","popperStyles","priority","check","escapeWithReference","shiftvariation","shiftOffsets","bound","hide","subtractLength","requestAnimationFrame","update","debounce","bind","Popper","Defaults","jquery","modifierOptions","onLoad","enableEventListeners","destroy","Utils","global","PopperUtils"],"mappings":"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","file":"popper.min.2e01bc1d.js","sourceRoot":"../src/views/home","sourcesContent":["export default typeof window !== 'undefined' && typeof document !== 'undefined';\n","import isBrowser from './isBrowser';\n\nconst longerTimeoutBrowsers = ['Edge', 'Trident', 'Firefox'];\nlet timeoutDuration = 0;\nfor (let i = 0; i < longerTimeoutBrowsers.length; i += 1) {\n  if (isBrowser && navigator.userAgent.indexOf(longerTimeoutBrowsers[i]) >= 0) {\n    timeoutDuration = 1;\n    break;\n  }\n}\n\nexport function microtaskDebounce(fn) {\n  let called = false\n  return () => {\n    if (called) {\n      return\n    }\n    called = true\n    window.Promise.resolve().then(() => {\n      called = false\n      fn()\n    })\n  }\n}\n\nexport function taskDebounce(fn) {\n  let scheduled = false;\n  return () => {\n    if (!scheduled) {\n      scheduled = true;\n      setTimeout(() => {\n        scheduled = false;\n        fn();\n      }, timeoutDuration);\n    }\n  };\n}\n\nconst supportsMicroTasks = isBrowser && window.Promise\n\n\n/**\n* Create a debounced version of a method, that's asynchronously deferred\n* but called in the minimum time possible.\n*\n* @method\n* @memberof Popper.Utils\n* @argument {Function} fn\n* @returns {Function}\n*/\nexport default (supportsMicroTasks\n  ? microtaskDebounce\n  : taskDebounce);\n","/**\n * Check if the given variable is a function\n * @method\n * @memberof Popper.Utils\n * @argument {Any} functionToCheck - variable to check\n * @returns {Boolean} answer to: is a function?\n */\nexport default function isFunction(functionToCheck) {\n  const getType = {};\n  return (\n    functionToCheck &&\n    getType.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","/**\n * Get CSS computed property of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Eement} element\n * @argument {String} property\n */\nexport default function getStyleComputedProperty(element, property) {\n  if (element.nodeType !== 1) {\n    return [];\n  }\n  // NOTE: 1 DOM access here\n  const window = element.ownerDocument.defaultView;\n  const css = window.getComputedStyle(element, null);\n  return property ? css[property] : css;\n}\n","/**\n * Returns the parentNode or the host of the element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} parent\n */\nexport default function getParentNode(element) {\n  if (element.nodeName === 'HTML') {\n    return element;\n  }\n  return element.parentNode || element.host;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Returns the scrolling parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} scroll parent\n */\nexport default function getScrollParent(element) {\n  // Return body, `getScroll` will take care to get the correct `scrollTop` from it\n  if (!element) {\n    return document.body\n  }\n\n  switch (element.nodeName) {\n    case 'HTML':\n    case 'BODY':\n      return element.ownerDocument.body\n    case '#document':\n      return element.body\n  }\n\n  // Firefox want us to check `-x` and `-y` variations as well\n  const { overflow, overflowX, overflowY } = getStyleComputedProperty(element);\n  if (/(auto|scroll|overlay)/.test(overflow + overflowY + overflowX)) {\n    return element;\n  }\n\n  return getScrollParent(getParentNode(element));\n}\n","import isBrowser from './isBrowser';\n\nconst isIE11 = isBrowser && !!(window.MSInputMethodContext && document.documentMode);\nconst isIE10 = isBrowser && /MSIE 10/.test(navigator.userAgent);\n\n/**\n * Determines if the browser is Internet Explorer\n * @method\n * @memberof Popper.Utils\n * @param {Number} version to check\n * @returns {Boolean} isIE\n */\nexport default function isIE(version) {\n  if (version === 11) {\n    return isIE11;\n  }\n  if (version === 10) {\n    return isIE10;\n  }\n  return isIE11 || isIE10;\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Returns the offset parent of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} offset parent\n */\nexport default function getOffsetParent(element) {\n  if (!element) {\n    return document.documentElement;\n  }\n\n  const noOffsetParent = isIE(10) ? document.body : null;\n\n  // NOTE: 1 DOM access here\n  let offsetParent = element.offsetParent || null;\n  // Skip hidden elements which don't have an offsetParent\n  while (offsetParent === noOffsetParent && element.nextElementSibling) {\n    offsetParent = (element = element.nextElementSibling).offsetParent;\n  }\n\n  const nodeName = offsetParent && offsetParent.nodeName;\n\n  if (!nodeName || nodeName === 'BODY' || nodeName === 'HTML') {\n    return element ? element.ownerDocument.documentElement : document.documentElement;\n  }\n\n  // .offsetParent will return the closest TH, TD or TABLE in case\n  // no offsetParent is present, I hate this job...\n  if (\n    ['TH', 'TD', 'TABLE'].indexOf(offsetParent.nodeName) !== -1 &&\n    getStyleComputedProperty(offsetParent, 'position') === 'static'\n  ) {\n    return getOffsetParent(offsetParent);\n  }\n\n  return offsetParent;\n}\n","import getOffsetParent from './getOffsetParent';\n\nexport default function isOffsetContainer(element) {\n  const { nodeName } = element;\n  if (nodeName === 'BODY') {\n    return false;\n  }\n  return (\n    nodeName === 'HTML' || getOffsetParent(element.firstElementChild) === element\n  );\n}\n","/**\n * Finds the root node (document, shadowDOM root) of the given element\n * @method\n * @memberof Popper.Utils\n * @argument {Element} node\n * @returns {Element} root node\n */\nexport default function getRoot(node) {\n  if (node.parentNode !== null) {\n    return getRoot(node.parentNode);\n  }\n\n  return node;\n}\n","import isOffsetContainer from './isOffsetContainer';\nimport getRoot from './getRoot';\nimport getOffsetParent from './getOffsetParent';\n\n/**\n * Finds the offset parent common to the two provided nodes\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element1\n * @argument {Element} element2\n * @returns {Element} common offset parent\n */\nexport default function findCommonOffsetParent(element1, element2) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n  if (!element1 || !element1.nodeType || !element2 || !element2.nodeType) {\n    return document.documentElement;\n  }\n\n  // Here we make sure to give as \"start\" the element that comes first in the DOM\n  const order =\n    element1.compareDocumentPosition(element2) &\n    Node.DOCUMENT_POSITION_FOLLOWING;\n  const start = order ? element1 : element2;\n  const end = order ? element2 : element1;\n\n  // Get common ancestor container\n  const range = document.createRange();\n  range.setStart(start, 0);\n  range.setEnd(end, 0);\n  const { commonAncestorContainer } = range;\n\n  // Both nodes are inside #document\n  if (\n    (element1 !== commonAncestorContainer &&\n      element2 !== commonAncestorContainer) ||\n    start.contains(end)\n  ) {\n    if (isOffsetContainer(commonAncestorContainer)) {\n      return commonAncestorContainer;\n    }\n\n    return getOffsetParent(commonAncestorContainer);\n  }\n\n  // one of the nodes is inside shadowDOM, find which one\n  const element1root = getRoot(element1);\n  if (element1root.host) {\n    return findCommonOffsetParent(element1root.host, element2);\n  } else {\n    return findCommonOffsetParent(element1, getRoot(element2).host);\n  }\n}\n","/**\n * Gets the scroll value of the given element in the given side (top and left)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {String} side `top` or `left`\n * @returns {number} amount of scrolled pixels\n */\nexport default function getScroll(element, side = 'top') {\n  const upperSide = side === 'top' ? 'scrollTop' : 'scrollLeft';\n  const nodeName = element.nodeName;\n\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    const html = element.ownerDocument.documentElement;\n    const scrollingElement = element.ownerDocument.scrollingElement || html;\n    return scrollingElement[upperSide];\n  }\n\n  return element[upperSide];\n}\n","import getScroll from './getScroll';\n\n/*\n * Sum or subtract the element scroll values (left and top) from a given rect object\n * @method\n * @memberof Popper.Utils\n * @param {Object} rect - Rect object you want to change\n * @param {HTMLElement} element - The element from the function reads the scroll values\n * @param {Boolean} subtract - set to true if you want to subtract the scroll values\n * @return {Object} rect - The modifier rect object\n */\nexport default function includeScroll(rect, element, subtract = false) {\n  const scrollTop = getScroll(element, 'top');\n  const scrollLeft = getScroll(element, 'left');\n  const modifier = subtract ? -1 : 1;\n  rect.top += scrollTop * modifier;\n  rect.bottom += scrollTop * modifier;\n  rect.left += scrollLeft * modifier;\n  rect.right += scrollLeft * modifier;\n  return rect;\n}\n","/*\n * Helper to detect borders of a given element\n * @method\n * @memberof Popper.Utils\n * @param {CSSStyleDeclaration} styles\n * Result of `getStyleComputedProperty` on the given element\n * @param {String} axis - `x` or `y`\n * @return {number} borders - The borders size of the given axis\n */\n\nexport default function getBordersSize(styles, axis) {\n  const sideA = axis === 'x' ? 'Left' : 'Top';\n  const sideB = sideA === 'Left' ? 'Right' : 'Bottom';\n\n  return (\n    parseFloat(styles[`border${sideA}Width`], 10) +\n    parseFloat(styles[`border${sideB}Width`], 10)\n  );\n}\n","import isIE from './isIE';\n\nfunction getSize(axis, body, html, computedStyle) {\n  return Math.max(\n    body[`offset${axis}`],\n    body[`scroll${axis}`],\n    html[`client${axis}`],\n    html[`offset${axis}`],\n    html[`scroll${axis}`],\n    isIE(10)\n      ? (parseInt(html[`offset${axis}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Top' : 'Left'}`]) + \n      parseInt(computedStyle[`margin${axis === 'Height' ? 'Bottom' : 'Right'}`]))\n    : 0 \n  );\n}\n\nexport default function getWindowSizes(document) {\n  const body = document.body;\n  const html = document.documentElement;\n  const computedStyle = isIE(10) && getComputedStyle(html);\n\n  return {\n    height: getSize('Height', body, html, computedStyle),\n    width: getSize('Width', body, html, computedStyle),\n  };\n}\n","/**\n * Given element offsets, generate an output similar to getBoundingClientRect\n * @method\n * @memberof Popper.Utils\n * @argument {Object} offsets\n * @returns {Object} ClientRect like output\n */\nexport default function getClientRect(offsets) {\n  return {\n    ...offsets,\n    right: offsets.left + offsets.width,\n    bottom: offsets.top + offsets.height,\n  };\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getBordersSize from './getBordersSize';\nimport getWindowSizes from './getWindowSizes';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\nimport isIE from './isIE';\n\n/**\n * Get bounding client rect of given element\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} element\n * @return {Object} client rect\n */\nexport default function getBoundingClientRect(element) {\n  let rect = {};\n\n  // IE10 10 FIX: Please, don't ask, the element isn't\n  // considered in DOM in some circumstances...\n  // This isn't reproducible in IE10 compatibility mode of IE11\n  try {\n    if (isIE(10)) {\n      rect = element.getBoundingClientRect();\n      const scrollTop = getScroll(element, 'top');\n      const scrollLeft = getScroll(element, 'left');\n      rect.top += scrollTop;\n      rect.left += scrollLeft;\n      rect.bottom += scrollTop;\n      rect.right += scrollLeft;\n    }\n    else {\n      rect = element.getBoundingClientRect();\n    }\n  }\n  catch(e){}\n\n  const result = {\n    left: rect.left,\n    top: rect.top,\n    width: rect.right - rect.left,\n    height: rect.bottom - rect.top,\n  };\n\n  // subtract scrollbar size from sizes\n  const sizes = element.nodeName === 'HTML' ? getWindowSizes(element.ownerDocument) : {};\n  const width =\n    sizes.width || element.clientWidth || result.right - result.left;\n  const height =\n    sizes.height || element.clientHeight || result.bottom - result.top;\n\n  let horizScrollbar = element.offsetWidth - width;\n  let vertScrollbar = element.offsetHeight - height;\n\n  // if an hypothetical scrollbar is detected, we must be sure it's not a `border`\n  // we make this check conditional for performance reasons\n  if (horizScrollbar || vertScrollbar) {\n    const styles = getStyleComputedProperty(element);\n    horizScrollbar -= getBordersSize(styles, 'x');\n    vertScrollbar -= getBordersSize(styles, 'y');\n\n    result.width -= horizScrollbar;\n    result.height -= vertScrollbar;\n  }\n\n  return getClientRect(result);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport includeScroll from './includeScroll';\nimport getScrollParent from './getScrollParent';\nimport getBoundingClientRect from './getBoundingClientRect';\nimport runIsIE from './isIE';\nimport getClientRect from './getClientRect';\n\nexport default function getOffsetRectRelativeToArbitraryNode(children, parent, fixedPosition = false) {\n  const isIE10 = runIsIE(10);\n  const isHTML = parent.nodeName === 'HTML';\n  const childrenRect = getBoundingClientRect(children);\n  const parentRect = getBoundingClientRect(parent);\n  const scrollParent = getScrollParent(children);\n\n  const styles = getStyleComputedProperty(parent);\n  const borderTopWidth = parseFloat(styles.borderTopWidth, 10);\n  const borderLeftWidth = parseFloat(styles.borderLeftWidth, 10);\n\n  // In cases where the parent is fixed, we must ignore negative scroll in offset calc\n  if(fixedPosition && isHTML) {\n    parentRect.top = Math.max(parentRect.top, 0);\n    parentRect.left = Math.max(parentRect.left, 0);\n  }\n  let offsets = getClientRect({\n    top: childrenRect.top - parentRect.top - borderTopWidth,\n    left: childrenRect.left - parentRect.left - borderLeftWidth,\n    width: childrenRect.width,\n    height: childrenRect.height,\n  });\n  offsets.marginTop = 0;\n  offsets.marginLeft = 0;\n\n  // Subtract margins of documentElement in case it's being used as parent\n  // we do this only on HTML because it's the only element that behaves\n  // differently when margins are applied to it. The margins are included in\n  // the box of the documentElement, in the other cases not.\n  if (!isIE10 && isHTML) {\n    const marginTop = parseFloat(styles.marginTop, 10);\n    const marginLeft = parseFloat(styles.marginLeft, 10);\n\n    offsets.top -= borderTopWidth - marginTop;\n    offsets.bottom -= borderTopWidth - marginTop;\n    offsets.left -= borderLeftWidth - marginLeft;\n    offsets.right -= borderLeftWidth - marginLeft;\n\n    // Attach marginTop and marginLeft because in some circumstances we may need them\n    offsets.marginTop = marginTop;\n    offsets.marginLeft = marginLeft;\n  }\n\n  if (\n    isIE10 && !fixedPosition\n      ? parent.contains(scrollParent)\n      : parent === scrollParent && scrollParent.nodeName !== 'BODY'\n  ) {\n    offsets = includeScroll(offsets, parent);\n  }\n\n  return offsets;\n}\n","import getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getScroll from './getScroll';\nimport getClientRect from './getClientRect';\n\nexport default function getViewportOffsetRectRelativeToArtbitraryNode(element, excludeScroll = false) {\n  const html = element.ownerDocument.documentElement;\n  const relativeOffset = getOffsetRectRelativeToArbitraryNode(element, html);\n  const width = Math.max(html.clientWidth, window.innerWidth || 0);\n  const height = Math.max(html.clientHeight, window.innerHeight || 0);\n\n  const scrollTop = !excludeScroll ? getScroll(html) : 0;\n  const scrollLeft = !excludeScroll ? getScroll(html, 'left') : 0;\n\n  const offset = {\n    top: scrollTop - relativeOffset.top + relativeOffset.marginTop,\n    left: scrollLeft - relativeOffset.left + relativeOffset.marginLeft,\n    width,\n    height,\n  };\n\n  return getClientRect(offset);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport getParentNode from './getParentNode';\n\n/**\n * Check if the given element is fixed or is inside a fixed parent\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @argument {Element} customContainer\n * @returns {Boolean} answer to \"isFixed?\"\n */\nexport default function isFixed(element) {\n  const nodeName = element.nodeName;\n  if (nodeName === 'BODY' || nodeName === 'HTML') {\n    return false;\n  }\n  if (getStyleComputedProperty(element, 'position') === 'fixed') {\n    return true;\n  }\n  const parentNode = getParentNode(element);\n  if (!parentNode) {\n    return false;\n  }\n  return isFixed(parentNode);\n}\n","import getStyleComputedProperty from './getStyleComputedProperty';\nimport isIE from './isIE';\n/**\n * Finds the first parent of an element that has a transformed property defined\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Element} first transformed parent or documentElement\n */\n\nexport default function getFixedPositionOffsetParent(element) {\n  // This check is needed to avoid errors in case one of the elements isn't defined for any reason\n   if (!element || !element.parentElement || isIE()) {\n    return document.documentElement;\n  }\n  let el = element.parentElement;\n  while (el && getStyleComputedProperty(el, 'transform') === 'none') {\n    el = el.parentElement;\n  }\n  return el || document.documentElement;\n\n}\n","import getScrollParent from './getScrollParent';\nimport getParentNode from './getParentNode';\nimport findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getViewportOffsetRectRelativeToArtbitraryNode from './getViewportOffsetRectRelativeToArtbitraryNode';\nimport getWindowSizes from './getWindowSizes';\nimport isFixed from './isFixed';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Computed the boundaries limits and return them\n * @method\n * @memberof Popper.Utils\n * @param {HTMLElement} popper\n * @param {HTMLElement} reference\n * @param {number} padding\n * @param {HTMLElement} boundariesElement - Element used to define the boundaries\n * @param {Boolean} fixedPosition - Is in fixed position mode\n * @returns {Object} Coordinates of the boundaries\n */\nexport default function getBoundaries(\n  popper,\n  reference,\n  padding,\n  boundariesElement,\n  fixedPosition = false\n) {\n  // NOTE: 1 DOM access here\n\n  let boundaries = { top: 0, left: 0 };\n  const offsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n\n  // Handle viewport case\n  if (boundariesElement === 'viewport' ) {\n    boundaries = getViewportOffsetRectRelativeToArtbitraryNode(offsetParent, fixedPosition);\n  }\n\n  else {\n    // Handle other cases based on DOM element used as boundaries\n    let boundariesNode;\n    if (boundariesElement === 'scrollParent') {\n      boundariesNode = getScrollParent(getParentNode(reference));\n      if (boundariesNode.nodeName === 'BODY') {\n        boundariesNode = popper.ownerDocument.documentElement;\n      }\n    } else if (boundariesElement === 'window') {\n      boundariesNode = popper.ownerDocument.documentElement;\n    } else {\n      boundariesNode = boundariesElement;\n    }\n\n    const offsets = getOffsetRectRelativeToArbitraryNode(\n      boundariesNode,\n      offsetParent,\n      fixedPosition\n    );\n\n    // In case of HTML, we need a different computation\n    if (boundariesNode.nodeName === 'HTML' && !isFixed(offsetParent)) {\n      const { height, width } = getWindowSizes(popper.ownerDocument);\n      boundaries.top += offsets.top - offsets.marginTop;\n      boundaries.bottom = height + offsets.top;\n      boundaries.left += offsets.left - offsets.marginLeft;\n      boundaries.right = width + offsets.left;\n    } else {\n      // for all the other DOM elements, this one is good\n      boundaries = offsets;\n    }\n  }\n\n  // Add paddings\n  padding = padding || 0;\n  const isPaddingNumber = typeof padding === 'number';\n  boundaries.left += isPaddingNumber ? padding : padding.left || 0; \n  boundaries.top += isPaddingNumber ? padding : padding.top || 0; \n  boundaries.right -= isPaddingNumber ? padding : padding.right || 0; \n  boundaries.bottom -= isPaddingNumber ? padding : padding.bottom || 0; \n\n  return boundaries;\n}\n","import getBoundaries from '../utils/getBoundaries';\n\nfunction getArea({ width, height }) {\n  return width * height;\n}\n\n/**\n * Utility used to transform the `auto` placement to the placement with more\n * available space.\n * @method\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeAutoPlacement(\n  placement,\n  refRect,\n  popper,\n  reference,\n  boundariesElement,\n  padding = 0\n) {\n  if (placement.indexOf('auto') === -1) {\n    return placement;\n  }\n\n  const boundaries = getBoundaries(\n    popper,\n    reference,\n    padding,\n    boundariesElement\n  );\n\n  const rects = {\n    top: {\n      width: boundaries.width,\n      height: refRect.top - boundaries.top,\n    },\n    right: {\n      width: boundaries.right - refRect.right,\n      height: boundaries.height,\n    },\n    bottom: {\n      width: boundaries.width,\n      height: boundaries.bottom - refRect.bottom,\n    },\n    left: {\n      width: refRect.left - boundaries.left,\n      height: boundaries.height,\n    },\n  };\n\n  const sortedAreas = Object.keys(rects)\n    .map(key => ({\n      key,\n      ...rects[key],\n      area: getArea(rects[key]),\n    }))\n    .sort((a, b) => b.area - a.area);\n\n  const filteredAreas = sortedAreas.filter(\n    ({ width, height }) =>\n      width >= popper.clientWidth && height >= popper.clientHeight\n  );\n\n  const computedPlacement = filteredAreas.length > 0\n    ? filteredAreas[0].key\n    : sortedAreas[0].key;\n\n  const variation = placement.split('-')[1];\n\n  return computedPlacement + (variation ? `-${variation}` : '');\n}\n","import findCommonOffsetParent from './findCommonOffsetParent';\nimport getOffsetRectRelativeToArbitraryNode from './getOffsetRectRelativeToArbitraryNode';\nimport getFixedPositionOffsetParent from './getFixedPositionOffsetParent';\n\n/**\n * Get offsets to the reference element\n * @method\n * @memberof Popper.Utils\n * @param {Object} state\n * @param {Element} popper - the popper element\n * @param {Element} reference - the reference element (the popper will be relative to this)\n * @param {Element} fixedPosition - is in fixed position mode\n * @returns {Object} An object containing the offsets which will be applied to the popper\n */\nexport default function getReferenceOffsets(state, popper, reference, fixedPosition = null) {\n  const commonOffsetParent = fixedPosition ? getFixedPositionOffsetParent(popper) : findCommonOffsetParent(popper, reference);\n  return getOffsetRectRelativeToArbitraryNode(reference, commonOffsetParent, fixedPosition);\n}\n","/**\n * Get the outer sizes of the given element (offset size + margins)\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element\n * @returns {Object} object containing width and height properties\n */\nexport default function getOuterSizes(element) {\n  const window = element.ownerDocument.defaultView;\n  const styles = window.getComputedStyle(element);\n  const x = parseFloat(styles.marginTop || 0) + parseFloat(styles.marginBottom || 0);\n  const y = parseFloat(styles.marginLeft || 0) + parseFloat(styles.marginRight || 0);\n  const result = {\n    width: element.offsetWidth + y,\n    height: element.offsetHeight + x,\n  };\n  return result;\n}\n","/**\n * Get the opposite placement of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement\n * @returns {String} flipped placement\n */\nexport default function getOppositePlacement(placement) {\n  const hash = { left: 'right', right: 'left', bottom: 'top', top: 'bottom' };\n  return placement.replace(/left|right|bottom|top/g, matched => hash[matched]);\n}\n","import getOuterSizes from './getOuterSizes';\nimport getOppositePlacement from './getOppositePlacement';\n\n/**\n * Get offsets to the popper\n * @method\n * @memberof Popper.Utils\n * @param {Object} position - CSS position the Popper will get applied\n * @param {HTMLElement} popper - the popper element\n * @param {Object} referenceOffsets - the reference offsets (the popper will be relative to this)\n * @param {String} placement - one of the valid placement options\n * @returns {Object} popperOffsets - An object containing the offsets which will be applied to the popper\n */\nexport default function getPopperOffsets(popper, referenceOffsets, placement) {\n  placement = placement.split('-')[0];\n\n  // Get popper node sizes\n  const popperRect = getOuterSizes(popper);\n\n  // Add position, width and height to our offsets object\n  const popperOffsets = {\n    width: popperRect.width,\n    height: popperRect.height,\n  };\n\n  // depending by the popper placement we have to compute its offsets slightly differently\n  const isHoriz = ['right', 'left'].indexOf(placement) !== -1;\n  const mainSide = isHoriz ? 'top' : 'left';\n  const secondarySide = isHoriz ? 'left' : 'top';\n  const measurement = isHoriz ? 'height' : 'width';\n  const secondaryMeasurement = !isHoriz ? 'height' : 'width';\n\n  popperOffsets[mainSide] =\n    referenceOffsets[mainSide] +\n    referenceOffsets[measurement] / 2 -\n    popperRect[measurement] / 2;\n  if (placement === secondarySide) {\n    popperOffsets[secondarySide] =\n      referenceOffsets[secondarySide] - popperRect[secondaryMeasurement];\n  } else {\n    popperOffsets[secondarySide] =\n      referenceOffsets[getOppositePlacement(secondarySide)];\n  }\n\n  return popperOffsets;\n}\n","/**\n * Mimics the `find` method of Array\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function find(arr, check) {\n  // use native find if supported\n  if (Array.prototype.find) {\n    return arr.find(check);\n  }\n\n  // use `filter` to obtain the same behavior of `find`\n  return arr.filter(check)[0];\n}\n","import find from './find';\n\n/**\n * Return the index of the matching object\n * @method\n * @memberof Popper.Utils\n * @argument {Array} arr\n * @argument prop\n * @argument value\n * @returns index or -1\n */\nexport default function findIndex(arr, prop, value) {\n  // use native findIndex if supported\n  if (Array.prototype.findIndex) {\n    return arr.findIndex(cur => cur[prop] === value);\n  }\n\n  // use `find` + `indexOf` if `findIndex` isn't supported\n  const match = find(arr, obj => obj[prop] === value);\n  return arr.indexOf(match);\n}\n","import isFunction from './isFunction';\nimport findIndex from './findIndex';\nimport getClientRect from '../utils/getClientRect';\n\n/**\n * Loop trough the list of modifiers and run them in order,\n * each of them will then edit the data object.\n * @method\n * @memberof Popper.Utils\n * @param {dataObject} data\n * @param {Array} modifiers\n * @param {String} ends - Optional modifier name used as stopper\n * @returns {dataObject}\n */\nexport default function runModifiers(modifiers, data, ends) {\n  const modifiersToRun = ends === undefined\n    ? modifiers\n    : modifiers.slice(0, findIndex(modifiers, 'name', ends));\n\n  modifiersToRun.forEach(modifier => {\n    if (modifier['function']) { // eslint-disable-line dot-notation\n      console.warn('`modifier.function` is deprecated, use `modifier.fn`!');\n    }\n    const fn = modifier['function'] || modifier.fn; // eslint-disable-line dot-notation\n    if (modifier.enabled && isFunction(fn)) {\n      // Add properties to offsets to make them a complete clientRect object\n      // we do this before each modifier to make sure the previous one doesn't\n      // mess with these values\n      data.offsets.popper = getClientRect(data.offsets.popper);\n      data.offsets.reference = getClientRect(data.offsets.reference);\n\n      data = fn(data, modifier);\n    }\n  });\n\n  return data;\n}\n","import computeAutoPlacement from '../utils/computeAutoPlacement';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\n\n/**\n * Updates the position of the popper, computing the new offsets and applying\n * the new style.<br />\n * Prefer `scheduleUpdate` over `update` because of performance reasons.\n * @method\n * @memberof Popper\n */\nexport default function update() {\n  // if popper is destroyed, don't perform any further update\n  if (this.state.isDestroyed) {\n    return;\n  }\n\n  let data = {\n    instance: this,\n    styles: {},\n    arrowStyles: {},\n    attributes: {},\n    flipped: false,\n    offsets: {},\n  };\n\n  // compute reference element offsets\n  data.offsets.reference = getReferenceOffsets(\n    this.state,\n    this.popper,\n    this.reference,\n    this.options.positionFixed\n  );\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  data.placement = computeAutoPlacement(\n    this.options.placement,\n    data.offsets.reference,\n    this.popper,\n    this.reference,\n    this.options.modifiers.flip.boundariesElement,\n    this.options.modifiers.flip.padding\n  );\n\n  // store the computed placement inside `originalPlacement`\n  data.originalPlacement = data.placement;\n\n  data.positionFixed = this.options.positionFixed;\n\n  // compute the popper offsets\n  data.offsets.popper = getPopperOffsets(\n    this.popper,\n    data.offsets.reference,\n    data.placement\n  );\n\n  data.offsets.popper.position = this.options.positionFixed\n    ? 'fixed'\n    : 'absolute';\n\n  // run the modifiers\n  data = runModifiers(this.modifiers, data);\n\n  // the first `update` will call `onCreate` callback\n  // the other ones will call `onUpdate` callback\n  if (!this.state.isCreated) {\n    this.state.isCreated = true;\n    this.options.onCreate(data);\n  } else {\n    this.options.onUpdate(data);\n  }\n}\n","/**\n * Helper used to know if the given modifier is enabled.\n * @method\n * @memberof Popper.Utils\n * @returns {Boolean}\n */\nexport default function isModifierEnabled(modifiers, modifierName) {\n  return modifiers.some(\n    ({ name, enabled }) => enabled && name === modifierName\n  );\n}\n","/**\n * Get the prefixed supported property name\n * @method\n * @memberof Popper.Utils\n * @argument {String} property (camelCase)\n * @returns {String} prefixed property (camelCase or PascalCase, depending on the vendor prefix)\n */\nexport default function getSupportedPropertyName(property) {\n  const prefixes = [false, 'ms', 'Webkit', 'Moz', 'O'];\n  const upperProp = property.charAt(0).toUpperCase() + property.slice(1);\n\n  for (let i = 0; i < prefixes.length; i++) {\n    const prefix = prefixes[i];\n    const toCheck = prefix ? `${prefix}${upperProp}` : property;\n    if (typeof document.body.style[toCheck] !== 'undefined') {\n      return toCheck;\n    }\n  }\n  return null;\n}\n","import isModifierEnabled from '../utils/isModifierEnabled';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * Destroys the popper.\n * @method\n * @memberof Popper\n */\nexport default function destroy() {\n  this.state.isDestroyed = true;\n\n  // touch DOM only if `applyStyle` modifier is enabled\n  if (isModifierEnabled(this.modifiers, 'applyStyle')) {\n    this.popper.removeAttribute('x-placement');\n    this.popper.style.position = '';\n    this.popper.style.top = '';\n    this.popper.style.left = '';\n    this.popper.style.right = '';\n    this.popper.style.bottom = '';\n    this.popper.style.willChange = '';\n    this.popper.style[getSupportedPropertyName('transform')] = '';\n  }\n\n  this.disableEventListeners();\n\n  // remove the popper if user explicity asked for the deletion on destroy\n  // do not use `remove` because IE11 doesn't support it\n  if (this.options.removeOnDestroy) {\n    this.popper.parentNode.removeChild(this.popper);\n  }\n  return this;\n}\n","/**\n * Get the window associated with the element\n * @argument {Element} element\n * @returns {Window}\n */\nexport default function getWindow(element) {\n  const ownerDocument = element.ownerDocument;\n  return ownerDocument ? ownerDocument.defaultView : window;\n}\n","import getScrollParent from './getScrollParent';\nimport getWindow from './getWindow';\n\nfunction attachToScrollParents(scrollParent, event, callback, scrollParents) {\n  const isBody = scrollParent.nodeName === 'BODY';\n  const target = isBody ? scrollParent.ownerDocument.defaultView : scrollParent;\n  target.addEventListener(event, callback, { passive: true });\n\n  if (!isBody) {\n    attachToScrollParents(\n      getScrollParent(target.parentNode),\n      event,\n      callback,\n      scrollParents\n    );\n  }\n  scrollParents.push(target);\n}\n\n/**\n * Setup needed event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function setupEventListeners(\n  reference,\n  options,\n  state,\n  updateBound\n) {\n  // Resize event listener on window\n  state.updateBound = updateBound;\n  getWindow(reference).addEventListener('resize', state.updateBound, { passive: true });\n\n  // Scroll event listener on scroll parents\n  const scrollElement = getScrollParent(reference);\n  attachToScrollParents(\n    scrollElement,\n    'scroll',\n    state.updateBound,\n    state.scrollParents\n  );\n  state.scrollElement = scrollElement;\n  state.eventsEnabled = true;\n\n  return state;\n}\n","import setupEventListeners from '../utils/setupEventListeners';\n\n/**\n * It will add resize/scroll events and start recalculating\n * position of the popper element when they are triggered.\n * @method\n * @memberof Popper\n */\nexport default function enableEventListeners() {\n  if (!this.state.eventsEnabled) {\n    this.state = setupEventListeners(\n      this.reference,\n      this.options,\n      this.state,\n      this.scheduleUpdate\n    );\n  }\n}\n","import getWindow from './getWindow';\n\n/**\n * Remove event listeners used to update the popper position\n * @method\n * @memberof Popper.Utils\n * @private\n */\nexport default function removeEventListeners(reference, state) {\n  // Remove resize event listener on window\n  getWindow(reference).removeEventListener('resize', state.updateBound);\n\n  // Remove scroll event listener on scroll parents\n  state.scrollParents.forEach(target => {\n    target.removeEventListener('scroll', state.updateBound);\n  });\n\n  // Reset state\n  state.updateBound = null;\n  state.scrollParents = [];\n  state.scrollElement = null;\n  state.eventsEnabled = false;\n  return state;\n}\n","import removeEventListeners from '../utils/removeEventListeners';\n\n/**\n * It will remove resize/scroll events and won't recalculate popper position\n * when they are triggered. It also won't trigger `onUpdate` callback anymore,\n * unless you call `update` method manually.\n * @method\n * @memberof Popper\n */\nexport default function disableEventListeners() {\n  if (this.state.eventsEnabled) {\n    cancelAnimationFrame(this.scheduleUpdate);\n    this.state = removeEventListeners(this.reference, this.state);\n  }\n}\n","/**\n * Tells if a given input is a number\n * @method\n * @memberof Popper.Utils\n * @param {*} input to check\n * @return {Boolean}\n */\nexport default function isNumeric(n) {\n  return n !== '' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n","import isNumeric from './isNumeric';\n\n/**\n * Set the style to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the style to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setStyles(element, styles) {\n  Object.keys(styles).forEach(prop => {\n    let unit = '';\n    // add unit if the value is numeric and is one of the following\n    if (\n      ['width', 'height', 'top', 'right', 'bottom', 'left'].indexOf(prop) !==\n        -1 &&\n      isNumeric(styles[prop])\n    ) {\n      unit = 'px';\n    }\n    element.style[prop] = styles[prop] + unit;\n  });\n}\n","/**\n * Set the attributes to the given popper\n * @method\n * @memberof Popper.Utils\n * @argument {Element} element - Element to apply the attributes to\n * @argument {Object} styles\n * Object with a list of properties and values which will be applied to the element\n */\nexport default function setAttributes(element, attributes) {\n  Object.keys(attributes).forEach(function(prop) {\n    const value = attributes[prop];\n    if (value !== false) {\n      element.setAttribute(prop, attributes[prop]);\n    } else {\n      element.removeAttribute(prop);\n    }\n  });\n}\n","import setStyles from '../utils/setStyles';\nimport setAttributes from '../utils/setAttributes';\nimport getReferenceOffsets from '../utils/getReferenceOffsets';\nimport computeAutoPlacement from '../utils/computeAutoPlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} data.styles - List of style properties - values to apply to popper element\n * @argument {Object} data.attributes - List of attribute properties - values to apply to popper element\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The same data object\n */\nexport default function applyStyle(data) {\n  // any property present in `data.styles` will be applied to the popper,\n  // in this way we can make the 3rd party modifiers add custom styles to it\n  // Be aware, modifiers could override the properties defined in the previous\n  // lines of this modifier!\n  setStyles(data.instance.popper, data.styles);\n\n  // any property present in `data.attributes` will be applied to the popper,\n  // they will be set as HTML attributes of the element\n  setAttributes(data.instance.popper, data.attributes);\n\n  // if arrowElement is defined and arrowStyles has some properties\n  if (data.arrowElement && Object.keys(data.arrowStyles).length) {\n    setStyles(data.arrowElement, data.arrowStyles);\n  }\n\n  return data;\n}\n\n/**\n * Set the x-placement attribute before everything else because it could be used\n * to add margins to the popper margins needs to be calculated to get the\n * correct popper offsets.\n * @method\n * @memberof Popper.modifiers\n * @param {HTMLElement} reference - The reference element used to position the popper\n * @param {HTMLElement} popper - The HTML element used as popper\n * @param {Object} options - Popper.js options\n */\nexport function applyStyleOnLoad(\n  reference,\n  popper,\n  options,\n  modifierOptions,\n  state\n) {\n  // compute reference element offsets\n  const referenceOffsets = getReferenceOffsets(state, popper, reference, options.positionFixed);\n\n  // compute auto placement, store placement inside the data object,\n  // modifiers will be able to edit `placement` if needed\n  // and refer to originalPlacement to know the original value\n  const placement = computeAutoPlacement(\n    options.placement,\n    referenceOffsets,\n    popper,\n    reference,\n    options.modifiers.flip.boundariesElement,\n    options.modifiers.flip.padding\n  );\n\n  popper.setAttribute('x-placement', placement);\n\n  // Apply `position` to popper before anything else because\n  // without the position applied we can't guarantee correct computations\n  setStyles(popper, { position: options.positionFixed ? 'fixed' : 'absolute' });\n\n  return options;\n}\n","/**\n * @function\n * @memberof Popper.Utils\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Boolean} shouldRound - If the offsets should be rounded at all\n * @returns {Object} The popper's position offsets rounded\n *\n * The tale of pixel-perfect positioning. It's still not 100% perfect, but as\n * good as it can be within reason.\n * Discussion here: https://github.com/FezVrasta/popper.js/pull/715\n *\n * Low DPI screens cause a popper to be blurry if not using full pixels (Safari\n * as well on High DPI screens).\n *\n * Firefox prefers no rounding for positioning and does not have blurriness on\n * high DPI screens.\n *\n * Only horizontal placement and left/right values need to be considered.\n */\nexport default function getRoundedOffsets(data, shouldRound) {\n  const { popper, reference } = data.offsets;\n  const { round, floor } = Math;\n  const noRound = v => v;\n  \n  const referenceWidth = round(reference.width);\n  const popperWidth = round(popper.width);\n  \n  const isVertical = ['left', 'right'].indexOf(data.placement) !== -1;\n  const isVariation = data.placement.indexOf('-') !== -1;\n  const sameWidthParity = referenceWidth % 2 === popperWidth % 2;\n  const bothOddWidth = referenceWidth % 2 === 1 && popperWidth % 2 === 1;\n\n  const horizontalToInteger = !shouldRound\n    ? noRound\n    : isVertical || isVariation || sameWidthParity\n    ? round\n    : floor;\n  const verticalToInteger = !shouldRound ? noRound : round;\n\n  return {\n    left: horizontalToInteger(\n      bothOddWidth && !isVariation && shouldRound\n        ? popper.left - 1\n        : popper.left\n    ),\n    top: verticalToInteger(popper.top),\n    bottom: verticalToInteger(popper.bottom),\n    right: horizontalToInteger(popper.right),\n  };\n}\n","import getSupportedPropertyName from '../utils/getSupportedPropertyName';\nimport find from '../utils/find';\nimport getOffsetParent from '../utils/getOffsetParent';\nimport getBoundingClientRect from '../utils/getBoundingClientRect';\nimport getRoundedOffsets from '../utils/getRoundedOffsets';\nimport isBrowser from '../utils/isBrowser';\n\nconst isFirefox = isBrowser && /Firefox/i.test(navigator.userAgent);\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function computeStyle(data, options) {\n  const { x, y } = options;\n  const { popper } = data.offsets;\n\n  // Remove this legacy support in Popper.js v2\n  const legacyGpuAccelerationOption = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'applyStyle'\n  ).gpuAcceleration;\n  if (legacyGpuAccelerationOption !== undefined) {\n    console.warn(\n      'WARNING: `gpuAcceleration` option moved to `computeStyle` modifier and will not be supported in future versions of Popper.js!'\n    );\n  }\n  const gpuAcceleration =\n    legacyGpuAccelerationOption !== undefined\n      ? legacyGpuAccelerationOption\n      : options.gpuAcceleration;\n\n  const offsetParent = getOffsetParent(data.instance.popper);\n  const offsetParentRect = getBoundingClientRect(offsetParent);\n\n  // Styles\n  const styles = {\n    position: popper.position,\n  };\n\n  const offsets = getRoundedOffsets(\n    data,\n    window.devicePixelRatio < 2 || !isFirefox\n  );\n\n  const sideA = x === 'bottom' ? 'top' : 'bottom';\n  const sideB = y === 'right' ? 'left' : 'right';\n\n  // if gpuAcceleration is set to `true` and transform is supported,\n  //  we use `translate3d` to apply the position to the popper we\n  // automatically use the supported prefixed version if needed\n  const prefixedProperty = getSupportedPropertyName('transform');\n\n  // now, let's make a step back and look at this code closely (wtf?)\n  // If the content of the popper grows once it's been positioned, it\n  // may happen that the popper gets misplaced because of the new content\n  // overflowing its reference element\n  // To avoid this problem, we provide two options (x and y), which allow\n  // the consumer to define the offset origin.\n  // If we position a popper on top of a reference element, we can set\n  // `x` to `top` to make the popper grow towards its top instead of\n  // its bottom.\n  let left, top;\n  if (sideA === 'bottom') {\n    // when offsetParent is <html> the positioning is relative to the bottom of the screen (excluding the scrollbar)\n    // and not the bottom of the html element\n    if (offsetParent.nodeName === 'HTML') {\n      top = -offsetParent.clientHeight + offsets.bottom;\n    } else {\n      top = -offsetParentRect.height + offsets.bottom;\n    }\n  } else {\n    top = offsets.top;\n  }\n  if (sideB === 'right') {\n    if (offsetParent.nodeName === 'HTML') {\n      left = -offsetParent.clientWidth + offsets.right;\n    } else {\n      left = -offsetParentRect.width + offsets.right;\n    }\n  } else {\n    left = offsets.left;\n  }\n  if (gpuAcceleration && prefixedProperty) {\n    styles[prefixedProperty] = `translate3d(${left}px, ${top}px, 0)`;\n    styles[sideA] = 0;\n    styles[sideB] = 0;\n    styles.willChange = 'transform';\n  } else {\n    // othwerise, we use the standard `top`, `left`, `bottom` and `right` properties\n    const invertTop = sideA === 'bottom' ? -1 : 1;\n    const invertLeft = sideB === 'right' ? -1 : 1;\n    styles[sideA] = top * invertTop;\n    styles[sideB] = left * invertLeft;\n    styles.willChange = `${sideA}, ${sideB}`;\n  }\n\n  // Attributes\n  const attributes = {\n    'x-placement': data.placement,\n  };\n\n  // Update `data` attributes, styles and arrowStyles\n  data.attributes = { ...attributes, ...data.attributes };\n  data.styles = { ...styles, ...data.styles };\n  data.arrowStyles = { ...data.offsets.arrow, ...data.arrowStyles };\n\n  return data;\n}\n","import find from './find';\n\n/**\n * Helper used to know if the given modifier depends from another one.<br />\n * It checks if the needed modifier is listed and enabled.\n * @method\n * @memberof Popper.Utils\n * @param {Array} modifiers - list of modifiers\n * @param {String} requestingName - name of requesting modifier\n * @param {String} requestedName - name of requested modifier\n * @returns {Boolean}\n */\nexport default function isModifierRequired(\n  modifiers,\n  requestingName,\n  requestedName\n) {\n  const requesting = find(modifiers, ({ name }) => name === requestingName);\n\n  const isRequired =\n    !!requesting &&\n    modifiers.some(modifier => {\n      return (\n        modifier.name === requestedName &&\n        modifier.enabled &&\n        modifier.order < requesting.order\n      );\n    });\n\n  if (!isRequired) {\n    const requesting = `\\`${requestingName}\\``;\n    const requested = `\\`${requestedName}\\``;\n    console.warn(\n      `${requested} modifier is required by ${requesting} modifier in order to work, be sure to include it before ${requesting}!`\n    );\n  }\n  return isRequired;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOuterSizes from '../utils/getOuterSizes';\nimport isModifierRequired from '../utils/isModifierRequired';\nimport getStyleComputedProperty from '../utils/getStyleComputedProperty';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function arrow(data, options) {\n  // arrow depends on keepTogether in order to work\n  if (!isModifierRequired(data.instance.modifiers, 'arrow', 'keepTogether')) {\n    return data;\n  }\n\n  let arrowElement = options.element;\n\n  // if arrowElement is a string, suppose it's a CSS selector\n  if (typeof arrowElement === 'string') {\n    arrowElement = data.instance.popper.querySelector(arrowElement);\n\n    // if arrowElement is not found, don't run the modifier\n    if (!arrowElement) {\n      return data;\n    }\n  } else {\n    // if the arrowElement isn't a query selector we must check that the\n    // provided DOM node is child of its popper node\n    if (!data.instance.popper.contains(arrowElement)) {\n      console.warn(\n        'WARNING: `arrow.element` must be child of its popper element!'\n      );\n      return data;\n    }\n  }\n\n  const placement = data.placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isVertical = ['left', 'right'].indexOf(placement) !== -1;\n\n  const len = isVertical ? 'height' : 'width';\n  const sideCapitalized = isVertical ? 'Top' : 'Left';\n  const side = sideCapitalized.toLowerCase();\n  const altSide = isVertical ? 'left' : 'top';\n  const opSide = isVertical ? 'bottom' : 'right';\n  const arrowElementSize = getOuterSizes(arrowElement)[len];\n\n  //\n  // extends keepTogether behavior making sure the popper and its\n  // reference have enough pixels in conjunction\n  //\n\n  // top/left side\n  if (reference[opSide] - arrowElementSize < popper[side]) {\n    data.offsets.popper[side] -=\n      popper[side] - (reference[opSide] - arrowElementSize);\n  }\n  // bottom/right side\n  if (reference[side] + arrowElementSize > popper[opSide]) {\n    data.offsets.popper[side] +=\n      reference[side] + arrowElementSize - popper[opSide];\n  }\n  data.offsets.popper = getClientRect(data.offsets.popper);\n\n  // compute center of the popper\n  const center = reference[side] + reference[len] / 2 - arrowElementSize / 2;\n\n  // Compute the sideValue using the updated popper offsets\n  // take popper margin in account because we don't have this info available\n  const css = getStyleComputedProperty(data.instance.popper);\n  const popperMarginSide = parseFloat(css[`margin${sideCapitalized}`], 10);\n  const popperBorderSide = parseFloat(css[`border${sideCapitalized}Width`], 10);\n  let sideValue =\n    center - data.offsets.popper[side] - popperMarginSide - popperBorderSide;\n\n  // prevent arrowElement from being placed not contiguously to its popper\n  sideValue = Math.max(Math.min(popper[len] - arrowElementSize, sideValue), 0);\n\n  data.arrowElement = arrowElement;\n  data.offsets.arrow = {\n    [side]: Math.round(sideValue),\n    [altSide]: '', // make sure to unset any eventual altSide value from the DOM node\n  };\n\n  return data;\n}\n","/**\n * Get the opposite placement variation of the given one\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement variation\n * @returns {String} flipped placement variation\n */\nexport default function getOppositeVariation(variation) {\n  if (variation === 'end') {\n    return 'start';\n  } else if (variation === 'start') {\n    return 'end';\n  }\n  return variation;\n}\n","/**\n * List of accepted placements to use as values of the `placement` option.<br />\n * Valid placements are:\n * - `auto`\n * - `top`\n * - `right`\n * - `bottom`\n * - `left`\n *\n * Each placement can have a variation from this list:\n * - `-start`\n * - `-end`\n *\n * Variations are interpreted easily if you think of them as the left to right\n * written languages. Horizontally (`top` and `bottom`), `start` is left and `end`\n * is right.<br />\n * Vertically (`left` and `right`), `start` is top and `end` is bottom.\n *\n * Some valid examples are:\n * - `top-end` (on top of reference, right aligned)\n * - `right-start` (on right of reference, top aligned)\n * - `bottom` (on bottom, centered)\n * - `auto-end` (on the side with more space available, alignment depends by placement)\n *\n * @static\n * @type {Array}\n * @enum {String}\n * @readonly\n * @method placements\n * @memberof Popper\n */\nexport default [\n  'auto-start',\n  'auto',\n  'auto-end',\n  'top-start',\n  'top',\n  'top-end',\n  'right-start',\n  'right',\n  'right-end',\n  'bottom-end',\n  'bottom',\n  'bottom-start',\n  'left-end',\n  'left',\n  'left-start',\n];\n","import placements from '../methods/placements';\n\n// Get rid of `auto` `auto-start` and `auto-end`\nconst validPlacements = placements.slice(3);\n\n/**\n * Given an initial placement, returns all the subsequent placements\n * clockwise (or counter-clockwise).\n *\n * @method\n * @memberof Popper.Utils\n * @argument {String} placement - A valid placement (it accepts variations)\n * @argument {Boolean} counter - Set to true to walk the placements counterclockwise\n * @returns {Array} placements including their variations\n */\nexport default function clockwise(placement, counter = false) {\n  const index = validPlacements.indexOf(placement);\n  const arr = validPlacements\n    .slice(index + 1)\n    .concat(validPlacements.slice(0, index));\n  return counter ? arr.reverse() : arr;\n}\n","import getOppositePlacement from '../utils/getOppositePlacement';\nimport getOppositeVariation from '../utils/getOppositeVariation';\nimport getPopperOffsets from '../utils/getPopperOffsets';\nimport runModifiers from '../utils/runModifiers';\nimport getBoundaries from '../utils/getBoundaries';\nimport isModifierEnabled from '../utils/isModifierEnabled';\nimport clockwise from '../utils/clockwise';\n\nconst BEHAVIORS = {\n  FLIP: 'flip',\n  CLOCKWISE: 'clockwise',\n  COUNTERCLOCKWISE: 'counterclockwise',\n};\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function flip(data, options) {\n  // if `inner` modifier is enabled, we can't use the `flip` modifier\n  if (isModifierEnabled(data.instance.modifiers, 'inner')) {\n    return data;\n  }\n\n  if (data.flipped && data.placement === data.originalPlacement) {\n    // seems like flip is trying to loop, probably there's not enough space on any of the flippable sides\n    return data;\n  }\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    options.boundariesElement,\n    data.positionFixed\n  );\n\n  let placement = data.placement.split('-')[0];\n  let placementOpposite = getOppositePlacement(placement);\n  let variation = data.placement.split('-')[1] || '';\n\n  let flipOrder = [];\n\n  switch (options.behavior) {\n    case BEHAVIORS.FLIP:\n      flipOrder = [placement, placementOpposite];\n      break;\n    case BEHAVIORS.CLOCKWISE:\n      flipOrder = clockwise(placement);\n      break;\n    case BEHAVIORS.COUNTERCLOCKWISE:\n      flipOrder = clockwise(placement, true);\n      break;\n    default:\n      flipOrder = options.behavior;\n  }\n\n  flipOrder.forEach((step, index) => {\n    if (placement !== step || flipOrder.length === index + 1) {\n      return data;\n    }\n\n    placement = data.placement.split('-')[0];\n    placementOpposite = getOppositePlacement(placement);\n\n    const popperOffsets = data.offsets.popper;\n    const refOffsets = data.offsets.reference;\n\n    // using floor because the reference offsets may contain decimals we are not going to consider here\n    const floor = Math.floor;\n    const overlapsRef =\n      (placement === 'left' &&\n        floor(popperOffsets.right) > floor(refOffsets.left)) ||\n      (placement === 'right' &&\n        floor(popperOffsets.left) < floor(refOffsets.right)) ||\n      (placement === 'top' &&\n        floor(popperOffsets.bottom) > floor(refOffsets.top)) ||\n      (placement === 'bottom' &&\n        floor(popperOffsets.top) < floor(refOffsets.bottom));\n\n    const overflowsLeft = floor(popperOffsets.left) < floor(boundaries.left);\n    const overflowsRight = floor(popperOffsets.right) > floor(boundaries.right);\n    const overflowsTop = floor(popperOffsets.top) < floor(boundaries.top);\n    const overflowsBottom =\n      floor(popperOffsets.bottom) > floor(boundaries.bottom);\n\n    const overflowsBoundaries =\n      (placement === 'left' && overflowsLeft) ||\n      (placement === 'right' && overflowsRight) ||\n      (placement === 'top' && overflowsTop) ||\n      (placement === 'bottom' && overflowsBottom);\n\n    // flip the variation if required\n    const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n\n    // flips variation if reference element overflows boundaries\n    const flippedVariationByRef =\n      !!options.flipVariations &&\n      ((isVertical && variation === 'start' && overflowsLeft) ||\n        (isVertical && variation === 'end' && overflowsRight) ||\n        (!isVertical && variation === 'start' && overflowsTop) ||\n        (!isVertical && variation === 'end' && overflowsBottom));\n\n    // flips variation if popper content overflows boundaries\n    const flippedVariationByContent =\n      !!options.flipVariationsByContent &&\n      ((isVertical && variation === 'start' && overflowsRight) ||\n        (isVertical && variation === 'end' && overflowsLeft) ||\n        (!isVertical && variation === 'start' && overflowsBottom) ||\n        (!isVertical && variation === 'end' && overflowsTop));\n\n    const flippedVariation = flippedVariationByRef || flippedVariationByContent;\n\n    if (overlapsRef || overflowsBoundaries || flippedVariation) {\n      // this boolean to detect any flip loop\n      data.flipped = true;\n\n      if (overlapsRef || overflowsBoundaries) {\n        placement = flipOrder[index + 1];\n      }\n\n      if (flippedVariation) {\n        variation = getOppositeVariation(variation);\n      }\n\n      data.placement = placement + (variation ? '-' + variation : '');\n\n      // this object contains `position`, we want to preserve it along with\n      // any additional property we may add in the future\n      data.offsets.popper = {\n        ...data.offsets.popper,\n        ...getPopperOffsets(\n          data.instance.popper,\n          data.offsets.reference,\n          data.placement\n        ),\n      };\n\n      data = runModifiers(data.instance.modifiers, data, 'flip');\n    }\n  });\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function keepTogether(data) {\n  const { popper, reference } = data.offsets;\n  const placement = data.placement.split('-')[0];\n  const floor = Math.floor;\n  const isVertical = ['top', 'bottom'].indexOf(placement) !== -1;\n  const side = isVertical ? 'right' : 'bottom';\n  const opSide = isVertical ? 'left' : 'top';\n  const measurement = isVertical ? 'width' : 'height';\n\n  if (popper[side] < floor(reference[opSide])) {\n    data.offsets.popper[opSide] =\n      floor(reference[opSide]) - popper[measurement];\n  }\n  if (popper[opSide] > floor(reference[side])) {\n    data.offsets.popper[opSide] = floor(reference[side]);\n  }\n\n  return data;\n}\n","import isNumeric from '../utils/isNumeric';\nimport getClientRect from '../utils/getClientRect';\nimport find from '../utils/find';\n\n/**\n * Converts a string containing value + unit into a px value number\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} str - Value + unit string\n * @argument {String} measurement - `height` or `width`\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @returns {Number|String}\n * Value in pixels, or original string if no values were extracted\n */\nexport function toValue(str, measurement, popperOffsets, referenceOffsets) {\n  // separate value from unit\n  const split = str.match(/((?:\\-|\\+)?\\d*\\.?\\d*)(.*)/);\n  const value = +split[1];\n  const unit = split[2];\n\n  // If it's not a number it's an operator, I guess\n  if (!value) {\n    return str;\n  }\n\n  if (unit.indexOf('%') === 0) {\n    let element;\n    switch (unit) {\n      case '%p':\n        element = popperOffsets;\n        break;\n      case '%':\n      case '%r':\n      default:\n        element = referenceOffsets;\n    }\n\n    const rect = getClientRect(element);\n    return rect[measurement] / 100 * value;\n  } else if (unit === 'vh' || unit === 'vw') {\n    // if is a vh or vw, we calculate the size based on the viewport\n    let size;\n    if (unit === 'vh') {\n      size = Math.max(\n        document.documentElement.clientHeight,\n        window.innerHeight || 0\n      );\n    } else {\n      size = Math.max(\n        document.documentElement.clientWidth,\n        window.innerWidth || 0\n      );\n    }\n    return size / 100 * value;\n  } else {\n    // if is an explicit pixel unit, we get rid of the unit and keep the value\n    // if is an implicit unit, it's px, and we return just the value\n    return value;\n  }\n}\n\n/**\n * Parse an `offset` string to extrapolate `x` and `y` numeric offsets.\n * @function\n * @memberof {modifiers~offset}\n * @private\n * @argument {String} offset\n * @argument {Object} popperOffsets\n * @argument {Object} referenceOffsets\n * @argument {String} basePlacement\n * @returns {Array} a two cells array with x and y offsets in numbers\n */\nexport function parseOffset(\n  offset,\n  popperOffsets,\n  referenceOffsets,\n  basePlacement\n) {\n  const offsets = [0, 0];\n\n  // Use height if placement is left or right and index is 0 otherwise use width\n  // in this way the first offset will use an axis and the second one\n  // will use the other one\n  const useHeight = ['right', 'left'].indexOf(basePlacement) !== -1;\n\n  // Split the offset string to obtain a list of values and operands\n  // The regex addresses values with the plus or minus sign in front (+10, -20, etc)\n  const fragments = offset.split(/(\\+|\\-)/).map(frag => frag.trim());\n\n  // Detect if the offset string contains a pair of values or a single one\n  // they could be separated by comma or space\n  const divider = fragments.indexOf(\n    find(fragments, frag => frag.search(/,|\\s/) !== -1)\n  );\n\n  if (fragments[divider] && fragments[divider].indexOf(',') === -1) {\n    console.warn(\n      'Offsets separated by white space(s) are deprecated, use a comma (,) instead.'\n    );\n  }\n\n  // If divider is found, we divide the list of values and operands to divide\n  // them by ofset X and Y.\n  const splitRegex = /\\s*,\\s*|\\s+/;\n  let ops = divider !== -1\n    ? [\n        fragments\n          .slice(0, divider)\n          .concat([fragments[divider].split(splitRegex)[0]]),\n        [fragments[divider].split(splitRegex)[1]].concat(\n          fragments.slice(divider + 1)\n        ),\n      ]\n    : [fragments];\n\n  // Convert the values with units to absolute pixels to allow our computations\n  ops = ops.map((op, index) => {\n    // Most of the units rely on the orientation of the popper\n    const measurement = (index === 1 ? !useHeight : useHeight)\n      ? 'height'\n      : 'width';\n    let mergeWithPrevious = false;\n    return (\n      op\n        // This aggregates any `+` or `-` sign that aren't considered operators\n        // e.g.: 10 + +5 => [10, +, +5]\n        .reduce((a, b) => {\n          if (a[a.length - 1] === '' && ['+', '-'].indexOf(b) !== -1) {\n            a[a.length - 1] = b;\n            mergeWithPrevious = true;\n            return a;\n          } else if (mergeWithPrevious) {\n            a[a.length - 1] += b;\n            mergeWithPrevious = false;\n            return a;\n          } else {\n            return a.concat(b);\n          }\n        }, [])\n        // Here we convert the string values into number values (in px)\n        .map(str => toValue(str, measurement, popperOffsets, referenceOffsets))\n    );\n  });\n\n  // Loop trough the offsets arrays and execute the operations\n  ops.forEach((op, index) => {\n    op.forEach((frag, index2) => {\n      if (isNumeric(frag)) {\n        offsets[index] += frag * (op[index2 - 1] === '-' ? -1 : 1);\n      }\n    });\n  });\n  return offsets;\n}\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @argument {Number|String} options.offset=0\n * The offset value as described in the modifier description\n * @returns {Object} The data object, properly modified\n */\nexport default function offset(data, { offset }) {\n  const { placement, offsets: { popper, reference } } = data;\n  const basePlacement = placement.split('-')[0];\n\n  let offsets;\n  if (isNumeric(+offset)) {\n    offsets = [+offset, 0];\n  } else {\n    offsets = parseOffset(offset, popper, reference, basePlacement);\n  }\n\n  if (basePlacement === 'left') {\n    popper.top += offsets[0];\n    popper.left -= offsets[1];\n  } else if (basePlacement === 'right') {\n    popper.top += offsets[0];\n    popper.left += offsets[1];\n  } else if (basePlacement === 'top') {\n    popper.left += offsets[0];\n    popper.top -= offsets[1];\n  } else if (basePlacement === 'bottom') {\n    popper.left += offsets[0];\n    popper.top += offsets[1];\n  }\n\n  data.popper = popper;\n  return data;\n}\n","import getOffsetParent from '../utils/getOffsetParent';\nimport getBoundaries from '../utils/getBoundaries';\nimport getSupportedPropertyName from '../utils/getSupportedPropertyName';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function preventOverflow(data, options) {\n  let boundariesElement =\n    options.boundariesElement || getOffsetParent(data.instance.popper);\n\n  // If offsetParent is the reference element, we really want to\n  // go one step up and use the next offsetParent as reference to\n  // avoid to make this modifier completely useless and look like broken\n  if (data.instance.reference === boundariesElement) {\n    boundariesElement = getOffsetParent(boundariesElement);\n  }\n\n  // NOTE: DOM access here\n  // resets the popper's position so that the document size can be calculated excluding\n  // the size of the popper element itself\n  const transformProp = getSupportedPropertyName('transform');\n  const popperStyles = data.instance.popper.style; // assignment to help minification\n  const { top, left, [transformProp]: transform } = popperStyles;\n  popperStyles.top = '';\n  popperStyles.left = '';\n  popperStyles[transformProp] = '';\n\n  const boundaries = getBoundaries(\n    data.instance.popper,\n    data.instance.reference,\n    options.padding,\n    boundariesElement,\n    data.positionFixed\n  );\n\n  // NOTE: DOM access here\n  // restores the original style properties after the offsets have been computed\n  popperStyles.top = top;\n  popperStyles.left = left;\n  popperStyles[transformProp] = transform;\n\n  options.boundaries = boundaries;\n\n  const order = options.priority;\n  let popper = data.offsets.popper;\n\n  const check = {\n    primary(placement) {\n      let value = popper[placement];\n      if (\n        popper[placement] < boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.max(popper[placement], boundaries[placement]);\n      }\n      return { [placement]: value };\n    },\n    secondary(placement) {\n      const mainSide = placement === 'right' ? 'left' : 'top';\n      let value = popper[mainSide];\n      if (\n        popper[placement] > boundaries[placement] &&\n        !options.escapeWithReference\n      ) {\n        value = Math.min(\n          popper[mainSide],\n          boundaries[placement] -\n            (placement === 'right' ? popper.width : popper.height)\n        );\n      }\n      return { [mainSide]: value };\n    },\n  };\n\n  order.forEach(placement => {\n    const side =\n      ['left', 'top'].indexOf(placement) !== -1 ? 'primary' : 'secondary';\n    popper = { ...popper, ...check[side](placement) };\n  });\n\n  data.offsets.popper = popper;\n\n  return data;\n}\n","/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function shift(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const shiftvariation = placement.split('-')[1];\n\n  // if shift shiftvariation is specified, run the modifier\n  if (shiftvariation) {\n    const { reference, popper } = data.offsets;\n    const isVertical = ['bottom', 'top'].indexOf(basePlacement) !== -1;\n    const side = isVertical ? 'left' : 'top';\n    const measurement = isVertical ? 'width' : 'height';\n\n    const shiftOffsets = {\n      start: { [side]: reference[side] },\n      end: {\n        [side]: reference[side] + reference[measurement] - popper[measurement],\n      },\n    };\n\n    data.offsets.popper = { ...popper, ...shiftOffsets[shiftvariation] };\n  }\n\n  return data;\n}\n","import isModifierRequired from '../utils/isModifierRequired';\nimport find from '../utils/find';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by update method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function hide(data) {\n  if (!isModifierRequired(data.instance.modifiers, 'hide', 'preventOverflow')) {\n    return data;\n  }\n\n  const refRect = data.offsets.reference;\n  const bound = find(\n    data.instance.modifiers,\n    modifier => modifier.name === 'preventOverflow'\n  ).boundaries;\n\n  if (\n    refRect.bottom < bound.top ||\n    refRect.left > bound.right ||\n    refRect.top > bound.bottom ||\n    refRect.right < bound.left\n  ) {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === true) {\n      return data;\n    }\n\n    data.hide = true;\n    data.attributes['x-out-of-boundaries'] = '';\n  } else {\n    // Avoid unnecessary DOM access if visibility hasn't changed\n    if (data.hide === false) {\n      return data;\n    }\n\n    data.hide = false;\n    data.attributes['x-out-of-boundaries'] = false;\n  }\n\n  return data;\n}\n","import getClientRect from '../utils/getClientRect';\nimport getOppositePlacement from '../utils/getOppositePlacement';\n\n/**\n * @function\n * @memberof Modifiers\n * @argument {Object} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {Object} The data object, properly modified\n */\nexport default function inner(data) {\n  const placement = data.placement;\n  const basePlacement = placement.split('-')[0];\n  const { popper, reference } = data.offsets;\n  const isHoriz = ['left', 'right'].indexOf(basePlacement) !== -1;\n\n  const subtractLength = ['top', 'left'].indexOf(basePlacement) === -1;\n\n  popper[isHoriz ? 'left' : 'top'] =\n    reference[basePlacement] -\n    (subtractLength ? popper[isHoriz ? 'width' : 'height'] : 0);\n\n  data.placement = getOppositePlacement(placement);\n  data.offsets.popper = getClientRect(popper);\n\n  return data;\n}\n","import applyStyle, { applyStyleOnLoad } from './applyStyle';\nimport computeStyle from './computeStyle';\nimport arrow from './arrow';\nimport flip from './flip';\nimport keepTogether from './keepTogether';\nimport offset from './offset';\nimport preventOverflow from './preventOverflow';\nimport shift from './shift';\nimport hide from './hide';\nimport inner from './inner';\n\n/**\n * Modifier function, each modifier can have a function of this type assigned\n * to its `fn` property.<br />\n * These functions will be called on each update, this means that you must\n * make sure they are performant enough to avoid performance bottlenecks.\n *\n * @function ModifierFn\n * @argument {dataObject} data - The data object generated by `update` method\n * @argument {Object} options - Modifiers configuration and options\n * @returns {dataObject} The data object, properly modified\n */\n\n/**\n * Modifiers are plugins used to alter the behavior of your poppers.<br />\n * Popper.js uses a set of 9 modifiers to provide all the basic functionalities\n * needed by the library.\n *\n * Usually you don't want to override the `order`, `fn` and `onLoad` props.\n * All the other properties are configurations that could be tweaked.\n * @namespace modifiers\n */\nexport default {\n  /**\n   * Modifier used to shift the popper on the start or end of its reference\n   * element.<br />\n   * It will read the variation of the `placement` property.<br />\n   * It can be one either `-end` or `-start`.\n   * @memberof modifiers\n   * @inner\n   */\n  shift: {\n    /** @prop {number} order=100 - Index used to define the order of execution */\n    order: 100,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: shift,\n  },\n\n  /**\n   * The `offset` modifier can shift your popper on both its axis.\n   *\n   * It accepts the following units:\n   * - `px` or unit-less, interpreted as pixels\n   * - `%` or `%r`, percentage relative to the length of the reference element\n   * - `%p`, percentage relative to the length of the popper element\n   * - `vw`, CSS viewport width unit\n   * - `vh`, CSS viewport height unit\n   *\n   * For length is intended the main axis relative to the placement of the popper.<br />\n   * This means that if the placement is `top` or `bottom`, the length will be the\n   * `width`. In case of `left` or `right`, it will be the `height`.\n   *\n   * You can provide a single value (as `Number` or `String`), or a pair of values\n   * as `String` divided by a comma or one (or more) white spaces.<br />\n   * The latter is a deprecated method because it leads to confusion and will be\n   * removed in v2.<br />\n   * Additionally, it accepts additions and subtractions between different units.\n   * Note that multiplications and divisions aren't supported.\n   *\n   * Valid examples are:\n   * ```\n   * 10\n   * '10%'\n   * '10, 10'\n   * '10%, 10'\n   * '10 + 10%'\n   * '10 - 5vh + 3%'\n   * '-10px + 5vh, 5px - 6%'\n   * ```\n   * > **NB**: If you desire to apply offsets to your poppers in a way that may make them overlap\n   * > with their reference element, unfortunately, you will have to disable the `flip` modifier.\n   * > You can read more on this at this [issue](https://github.com/FezVrasta/popper.js/issues/373).\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  offset: {\n    /** @prop {number} order=200 - Index used to define the order of execution */\n    order: 200,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: offset,\n    /** @prop {Number|String} offset=0\n     * The offset value as described in the modifier description\n     */\n    offset: 0,\n  },\n\n  /**\n   * Modifier used to prevent the popper from being positioned outside the boundary.\n   *\n   * A scenario exists where the reference itself is not within the boundaries.<br />\n   * We can say it has \"escaped the boundaries\" — or just \"escaped\".<br />\n   * In this case we need to decide whether the popper should either:\n   *\n   * - detach from the reference and remain \"trapped\" in the boundaries, or\n   * - if it should ignore the boundary and \"escape with its reference\"\n   *\n   * When `escapeWithReference` is set to`true` and reference is completely\n   * outside its boundaries, the popper will overflow (or completely leave)\n   * the boundaries in order to remain attached to the edge of the reference.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  preventOverflow: {\n    /** @prop {number} order=300 - Index used to define the order of execution */\n    order: 300,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: preventOverflow,\n    /**\n     * @prop {Array} [priority=['left','right','top','bottom']]\n     * Popper will try to prevent overflow following these priorities by default,\n     * then, it could overflow on the left and on top of the `boundariesElement`\n     */\n    priority: ['left', 'right', 'top', 'bottom'],\n    /**\n     * @prop {number} padding=5\n     * Amount of pixel used to define a minimum distance between the boundaries\n     * and the popper. This makes sure the popper always has a little padding\n     * between the edges of its container\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='scrollParent'\n     * Boundaries used by the modifier. Can be `scrollParent`, `window`,\n     * `viewport` or any DOM element.\n     */\n    boundariesElement: 'scrollParent',\n  },\n\n  /**\n   * Modifier used to make sure the reference and its popper stay near each other\n   * without leaving any gap between the two. Especially useful when the arrow is\n   * enabled and you want to ensure that it points to its reference element.\n   * It cares only about the first axis. You can still have poppers with margin\n   * between the popper and its reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  keepTogether: {\n    /** @prop {number} order=400 - Index used to define the order of execution */\n    order: 400,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: keepTogether,\n  },\n\n  /**\n   * This modifier is used to move the `arrowElement` of the popper to make\n   * sure it is positioned between the reference element and its popper element.\n   * It will read the outer size of the `arrowElement` node to detect how many\n   * pixels of conjunction are needed.\n   *\n   * It has no effect if no `arrowElement` is provided.\n   * @memberof modifiers\n   * @inner\n   */\n  arrow: {\n    /** @prop {number} order=500 - Index used to define the order of execution */\n    order: 500,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: arrow,\n    /** @prop {String|HTMLElement} element='[x-arrow]' - Selector or node used as arrow */\n    element: '[x-arrow]',\n  },\n\n  /**\n   * Modifier used to flip the popper's placement when it starts to overlap its\n   * reference element.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   *\n   * **NOTE:** this modifier will interrupt the current update cycle and will\n   * restart it if it detects the need to flip the placement.\n   * @memberof modifiers\n   * @inner\n   */\n  flip: {\n    /** @prop {number} order=600 - Index used to define the order of execution */\n    order: 600,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: flip,\n    /**\n     * @prop {String|Array} behavior='flip'\n     * The behavior used to change the popper's placement. It can be one of\n     * `flip`, `clockwise`, `counterclockwise` or an array with a list of valid\n     * placements (with optional variations)\n     */\n    behavior: 'flip',\n    /**\n     * @prop {number} padding=5\n     * The popper will flip if it hits the edges of the `boundariesElement`\n     */\n    padding: 5,\n    /**\n     * @prop {String|HTMLElement} boundariesElement='viewport'\n     * The element which will define the boundaries of the popper position.\n     * The popper will never be placed outside of the defined boundaries\n     * (except if `keepTogether` is enabled)\n     */\n    boundariesElement: 'viewport',\n    /**\n     * @prop {Boolean} flipVariations=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the reference element overlaps its boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariations: false,\n    /**\n     * @prop {Boolean} flipVariationsByContent=false\n     * The popper will switch placement variation between `-start` and `-end` when\n     * the popper element overlaps its reference boundaries.\n     *\n     * The original placement should have a set variation.\n     */\n    flipVariationsByContent: false,\n  },\n\n  /**\n   * Modifier used to make the popper flow toward the inner of the reference element.\n   * By default, when this modifier is disabled, the popper will be placed outside\n   * the reference element.\n   * @memberof modifiers\n   * @inner\n   */\n  inner: {\n    /** @prop {number} order=700 - Index used to define the order of execution */\n    order: 700,\n    /** @prop {Boolean} enabled=false - Whether the modifier is enabled or not */\n    enabled: false,\n    /** @prop {ModifierFn} */\n    fn: inner,\n  },\n\n  /**\n   * Modifier used to hide the popper when its reference element is outside of the\n   * popper boundaries. It will set a `x-out-of-boundaries` attribute which can\n   * be used to hide with a CSS selector the popper when its reference is\n   * out of boundaries.\n   *\n   * Requires the `preventOverflow` modifier before it in order to work.\n   * @memberof modifiers\n   * @inner\n   */\n  hide: {\n    /** @prop {number} order=800 - Index used to define the order of execution */\n    order: 800,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: hide,\n  },\n\n  /**\n   * Computes the style that will be applied to the popper element to gets\n   * properly positioned.\n   *\n   * Note that this modifier will not touch the DOM, it just prepares the styles\n   * so that `applyStyle` modifier can apply it. This separation is useful\n   * in case you need to replace `applyStyle` with a custom implementation.\n   *\n   * This modifier has `850` as `order` value to maintain backward compatibility\n   * with previous versions of Popper.js. Expect the modifiers ordering method\n   * to change in future major versions of the library.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  computeStyle: {\n    /** @prop {number} order=850 - Index used to define the order of execution */\n    order: 850,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: computeStyle,\n    /**\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: true,\n    /**\n     * @prop {string} [x='bottom']\n     * Where to anchor the X axis (`bottom` or `top`). AKA X offset origin.\n     * Change this if your popper should grow in a direction different from `bottom`\n     */\n    x: 'bottom',\n    /**\n     * @prop {string} [x='left']\n     * Where to anchor the Y axis (`left` or `right`). AKA Y offset origin.\n     * Change this if your popper should grow in a direction different from `right`\n     */\n    y: 'right',\n  },\n\n  /**\n   * Applies the computed styles to the popper element.\n   *\n   * All the DOM manipulations are limited to this modifier. This is useful in case\n   * you want to integrate Popper.js inside a framework or view library and you\n   * want to delegate all the DOM manipulations to it.\n   *\n   * Note that if you disable this modifier, you must make sure the popper element\n   * has its position set to `absolute` before Popper.js can do its work!\n   *\n   * Just disable this modifier and define your own to achieve the desired effect.\n   *\n   * @memberof modifiers\n   * @inner\n   */\n  applyStyle: {\n    /** @prop {number} order=900 - Index used to define the order of execution */\n    order: 900,\n    /** @prop {Boolean} enabled=true - Whether the modifier is enabled or not */\n    enabled: true,\n    /** @prop {ModifierFn} */\n    fn: applyStyle,\n    /** @prop {Function} */\n    onLoad: applyStyleOnLoad,\n    /**\n     * @deprecated since version 1.10.0, the property moved to `computeStyle` modifier\n     * @prop {Boolean} gpuAcceleration=true\n     * If true, it uses the CSS 3D transformation to position the popper.\n     * Otherwise, it will use the `top` and `left` properties\n     */\n    gpuAcceleration: undefined,\n  },\n};\n\n/**\n * The `dataObject` is an object containing all the information used by Popper.js.\n * This object is passed to modifiers and to the `onCreate` and `onUpdate` callbacks.\n * @name dataObject\n * @property {Object} data.instance The Popper.js instance\n * @property {String} data.placement Placement applied to popper\n * @property {String} data.originalPlacement Placement originally defined on init\n * @property {Boolean} data.flipped True if popper has been flipped by flip modifier\n * @property {Boolean} data.hide True if the reference element is out of boundaries, useful to know when to hide the popper\n * @property {HTMLElement} data.arrowElement Node used as arrow by arrow modifier\n * @property {Object} data.styles Any CSS property defined here will be applied to the popper. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.arrowStyles Any CSS property defined here will be applied to the popper arrow. It expects the JavaScript nomenclature (eg. `marginBottom`)\n * @property {Object} data.boundaries Offsets of the popper boundaries\n * @property {Object} data.offsets The measurements of popper, reference and arrow elements\n * @property {Object} data.offsets.popper `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.reference `top`, `left`, `width`, `height` values\n * @property {Object} data.offsets.arrow] `top` and `left` offsets, only one of them will be different from 0\n */\n","import modifiers from '../modifiers/index';\n\n/**\n * Default options provided to Popper.js constructor.<br />\n * These can be overridden using the `options` argument of Popper.js.<br />\n * To override an option, simply pass an object with the same\n * structure of the `options` object, as the 3rd argument. For example:\n * ```\n * new Popper(ref, pop, {\n *   modifiers: {\n *     preventOverflow: { enabled: false }\n *   }\n * })\n * ```\n * @type {Object}\n * @static\n * @memberof Popper\n */\nexport default {\n  /**\n   * Popper's placement.\n   * @prop {Popper.placements} placement='bottom'\n   */\n  placement: 'bottom',\n\n  /**\n   * Set this to true if you want popper to position it self in 'fixed' mode\n   * @prop {Boolean} positionFixed=false\n   */\n  positionFixed: false,\n\n  /**\n   * Whether events (resize, scroll) are initially enabled.\n   * @prop {Boolean} eventsEnabled=true\n   */\n  eventsEnabled: true,\n\n  /**\n   * Set to true if you want to automatically remove the popper when\n   * you call the `destroy` method.\n   * @prop {Boolean} removeOnDestroy=false\n   */\n  removeOnDestroy: false,\n\n  /**\n   * Callback called when the popper is created.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onCreate}\n   */\n  onCreate: () => {},\n\n  /**\n   * Callback called when the popper is updated. This callback is not called\n   * on the initialization/creation of the popper, but only on subsequent\n   * updates.<br />\n   * By default, it is set to no-op.<br />\n   * Access Popper.js instance with `data.instance`.\n   * @prop {onUpdate}\n   */\n  onUpdate: () => {},\n\n  /**\n   * List of modifiers used to modify the offsets before they are applied to the popper.\n   * They provide most of the functionalities of Popper.js.\n   * @prop {modifiers}\n   */\n  modifiers,\n};\n\n/**\n * @callback onCreate\n * @param {dataObject} data\n */\n\n/**\n * @callback onUpdate\n * @param {dataObject} data\n */\n","// Utils\nimport debounce from './utils/debounce';\nimport isFunction from './utils/isFunction';\n\n// Methods\nimport update from './methods/update';\nimport destroy from './methods/destroy';\nimport enableEventListeners from './methods/enableEventListeners';\nimport disableEventListeners from './methods/disableEventListeners';\nimport Defaults from './methods/defaults';\nimport placements from './methods/placements';\n\nexport default class Popper {\n  /**\n   * Creates a new Popper.js instance.\n   * @class Popper\n   * @param {Element|referenceObject} reference - The reference element used to position the popper\n   * @param {Element} popper - The HTML / XML element used as the popper\n   * @param {Object} options - Your custom options to override the ones defined in [Defaults](#defaults)\n   * @return {Object} instance - The generated Popper.js instance\n   */\n  constructor(reference, popper, options = {}) {\n    // make update() debounced, so that it only runs at most once-per-tick\n    this.update = debounce(this.update.bind(this));\n\n    // with {} we create a new object with the options inside it\n    this.options = { ...Popper.Defaults, ...options };\n\n    // init state\n    this.state = {\n      isDestroyed: false,\n      isCreated: false,\n      scrollParents: [],\n    };\n\n    // get reference and popper elements (allow jQuery wrappers)\n    this.reference = reference && reference.jquery ? reference[0] : reference;\n    this.popper = popper && popper.jquery ? popper[0] : popper;\n\n    // Deep merge modifiers options\n    this.options.modifiers = {};\n    Object.keys({\n      ...Popper.Defaults.modifiers,\n      ...options.modifiers,\n    }).forEach(name => {\n      this.options.modifiers[name] = {\n        // If it's a built-in modifier, use it as base\n        ...(Popper.Defaults.modifiers[name] || {}),\n        // If there are custom options, override and merge with default ones\n        ...(options.modifiers ? options.modifiers[name] : {}),\n      };\n    });\n\n    // Refactoring modifiers' list (Object => Array)\n    this.modifiers = Object.keys(this.options.modifiers)\n      .map(name => ({\n        name,\n        ...this.options.modifiers[name],\n      }))\n      // sort the modifiers by order\n      .sort((a, b) => a.order - b.order);\n\n    // modifiers have the ability to execute arbitrary code when Popper.js get inited\n    // such code is executed in the same order of its modifier\n    // they could add new properties to their options configuration\n    // BE AWARE: don't add options to `options.modifiers.name` but to `modifierOptions`!\n    this.modifiers.forEach(modifierOptions => {\n      if (modifierOptions.enabled && isFunction(modifierOptions.onLoad)) {\n        modifierOptions.onLoad(\n          this.reference,\n          this.popper,\n          this.options,\n          modifierOptions,\n          this.state\n        );\n      }\n    });\n\n    // fire the first update to position the popper in the right place\n    this.update();\n\n    const eventsEnabled = this.options.eventsEnabled;\n    if (eventsEnabled) {\n      // setup event listeners, they will take care of update the position in specific situations\n      this.enableEventListeners();\n    }\n\n    this.state.eventsEnabled = eventsEnabled;\n  }\n\n  // We can't use class properties because they don't get listed in the\n  // class prototype and break stuff like Sinon stubs\n  update() {\n    return update.call(this);\n  }\n  destroy() {\n    return destroy.call(this);\n  }\n  enableEventListeners() {\n    return enableEventListeners.call(this);\n  }\n  disableEventListeners() {\n    return disableEventListeners.call(this);\n  }\n\n  /**\n   * Schedules an update. It will run on the next UI update available.\n   * @method scheduleUpdate\n   * @memberof Popper\n   */\n  scheduleUpdate = () => requestAnimationFrame(this.update);\n\n  /**\n   * Collection of utilities useful when writing custom modifiers.\n   * Starting from version 1.7, this method is available only if you\n   * include `popper-utils.js` before `popper.js`.\n   *\n   * **DEPRECATION**: This way to access PopperUtils is deprecated\n   * and will be removed in v2! Use the PopperUtils module directly instead.\n   * Due to the high instability of the methods contained in Utils, we can't\n   * guarantee them to follow semver. Use them at your own risk!\n   * @static\n   * @private\n   * @type {Object}\n   * @deprecated since version 1.8\n   * @member Utils\n   * @memberof Popper\n   */\n  static Utils = (typeof window !== 'undefined' ? window : global).PopperUtils;\n\n  static placements = placements;\n\n  static Defaults = Defaults;\n}\n\n/**\n * The `referenceObject` is an object that provides an interface compatible with Popper.js\n * and lets you use it as replacement of a real DOM node.<br />\n * You can use this method to position a popper relatively to a set of coordinates\n * in case you don't have a DOM node to use as reference.\n *\n * ```\n * new Popper(referenceObject, popperNode);\n * ```\n *\n * NB: This feature isn't supported in Internet Explorer 10.\n * @name referenceObject\n * @property {Function} data.getBoundingClientRect\n * A function that returns a set of coordinates compatible with the native `getBoundingClientRect` method.\n * @property {number} data.clientWidth\n * An ES6 getter that will return the width of the virtual reference element.\n * @property {number} data.clientHeight\n * An ES6 getter that will return the height of the virtual reference element.\n */\n"]}